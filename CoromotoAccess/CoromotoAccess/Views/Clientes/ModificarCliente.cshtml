@model CoromotoAccess.Models.Usuario
@{
    ViewBag.Title = "ModificarCliente";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Modificar Cliente</h2>

    @if (ViewBag.MensajePantalla != null)
    {
        <div class="alert alert-danger text-center" role="alert">
            @ViewBag.MensajePantalla
        </div>
    }

    @using (Html.BeginForm("ModificarCliente", "Clientes", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate", onsubmit = "return validateForm()" }))
    {
        @Html.HiddenFor(m => m.ConsecutivoCliente)

        <div class="mb-4">
            <label class="form-label fw-semibold">Identificación:</label>
            @Html.TextBoxFor(m => m.Identificacion, new { @class = "form-control", @disabled = "disabled" })
        </div>

        <div class="mb-4">
            <label class="form-label fw-semibold">Nombre:</label>
            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", @disabled = "disabled" })
        </div>

        <div class="mb-4">
            <label class="form-label fw-semibold">Apellido:</label>
            @Html.TextBoxFor(m => m.Apellido, new { @class = "form-control", @disabled = "disabled" })
        </div>

        <div class="mb-4">
            <label class="form-label fw-semibold">Correo Electrónico:</label>
            @Html.TextBoxFor(m => m.CorreoElectronico, new { @class = "form-control", type = "email", required = "required", id = "correo" })
            <div class="invalid-feedback">Por favor ingrese un correo electrónico válido</div>
        </div>

        <div class="mb-4">
            <label class="form-label fw-semibold">Teléfono:</label>
            @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", type = "number", required = "required", id = "telefono" })
            <div class="invalid-feedback">Por favor ingrese un número de teléfono válido</div>
        </div>

        <div class="d-flex justify-content-end gap-2">
            <a href="@Url.Action("GestionClientes", "Clientes")" class="btn btn-secondary">Cancelar</a>
            <button type="submit" class="btn btn-primary">Guardar Cambios</button>
        </div>
    }
</div>

<script>
    function validateForm() {
        // Validar que los campos no tengan solo espacios en blanco
        const correo = document.getElementById('correo').value.trim();
        const telefono = document.getElementById('telefono').value.trim();

        if (!correo) {
            alert('El correo electrónico no puede estar vacío');
            return false;
        }

        if (!telefono) {
            alert('El teléfono no puede estar vacío');
            return false;
        }

        return true;
    }

    // Validación en tiempo real
    document.getElementById('correo').addEventListener('input', function() {
        this.value = this.value.trim();
    });

    document.getElementById('telefono').addEventListener('input', function() {
        this.value = this.value.trim();
    });
</script>
