@model CoromotoAccess.Models.Habitacion
@{
    ViewBag.Title = "ModificarHabitacion";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Modificar Habitación</h2>

    @if (ViewBag.MensajePantalla != null)
    {
        <div class="alert alert-danger text-center" role="alert">
            @ViewBag.MensajePantalla
        </div>
    }

    @using (Html.BeginForm("ModificarHabitacion", "Habitacion", FormMethod.Post,
        new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
    {
        @Html.HiddenFor(m => m.IdHabitacion)

        <!-- Campos básicos -->
        <div class="mb-4">
            <label class="form-label fw-semibold">Nombre de la habitación:</label>
            @Html.TextBoxFor(m => m.NombreHabitacion, new { @class = "form-control", required = "required" })
        </div>
        <div class="mb-4">
            <label class="form-label fw-semibold">Descripción:</label>
            @Html.TextBoxFor(m => m.Descripcion, new { @class = "form-control", required = "required" })
        </div>
        <div class="mb-4">
            <label class="form-label fw-semibold">Precio:</label>
            @Html.TextBoxFor(m => m.Precio, new
            {
                @class = "form-control",
                type = "number",
                step = "0.01",
                required = "required",
                Value = Model.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture) // 👈 aquí
            })
        </div>

        <div class="mb-4">
            <label class="form-label fw-semibold">CheckIn:</label>
            @Html.TextBoxFor(m => m.CheckIn, new
            {
                @class = "form-control",
                type = "datetime-local",
                required = "required",
                Value = Model.CheckIn.ToString("yyyy-MM-ddTHH:mm")  // 👈 formato correcto
            })
        </div>

        <div class="mb-4">
            <label class="form-label fw-semibold">CheckOut:</label>
            @Html.TextBoxFor(m => m.CheckOut, new
            {
                @class = "form-control",
                type = "datetime-local",
                required = "required",
                Value = Model.CheckOut.ToString("yyyy-MM-ddTHH:mm") // 👈 formato correcto
            })
        </div>

        <div class="mb-4 form-check">
            @Html.CheckBoxFor(m => m.Estado, new { @class = "form-check-input" })
            <label class="form-check-label">Activo</label>
        </div>
        <div class="mb-4">
            <label class="form-label fw-semibold">Villa:</label>
            @Html.DropDownList("IdVilla", (SelectList)ViewBag.Villas, "Seleccione una villa", new { @class = "form-control", required = "required" })
        </div>
        <div class="mb-4">
            <label class="form-label fw-semibold">Tipo de Habitación:</label>
            @Html.DropDownList("IdTipoHabitacion", (SelectList)ViewBag.TiposHabitacion, "Seleccione un tipo", new { @class = "form-control", required = "required" })
        </div>

        <!-- Imágenes -->
        <h4 class="mt-4 mb-3">Imágenes</h4>
        for (int i = 1; i <= 6; i++)
        {
            var prop = Model.GetType().GetProperty("img" + i);
            var ruta = prop != null ? prop.GetValue(Model) as string : null;

            <div class="mb-3">
                <label class="form-label">Imagen @i:</label><br />
                @if (!string.IsNullOrEmpty(ruta))
                {
                    <img src="@ruta" alt="Imagen @i" class="img-thumbnail mb-2" style="max-width:150px;" /><br />
                }
                <input type="file" name="img@(i)File" class="form-control" />
            </div>
        }


        <!-- Botones -->
        <div class="d-flex justify-content-end gap-2">
            <a href="@Url.Action("AdministrarHabitaciones", "Habitacion")" class="btn btn-secondary">Cancelar</a>
            <button type="submit" class="btn btn-primary">Guardar Cambios</button>
        </div>
    }
</div>
